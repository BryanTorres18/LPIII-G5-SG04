/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ejercicio1;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class Interface extends JFrame {

    /**
     * Creates new form Interface
     */
    Statement stm;
    ResultSet rs;
    Connection con;

    public Interface() {
        initComponents();
        this.setTitle("Displaying Query Results");
        try {
            String db = "ejercicio1"; //nombre de la base de datos
            String url = "jdbc:mysql://127.0.0.1/" + db; //conexion localhost + nombre de la base de datos
            String user = "root"; //usuario localhost
            String pass = ""; //contrase√±a localhost

            java.sql.Connection link = null;

            Class.forName("org.gjt.mm.mysql.Driver");

            link = DriverManager.getConnection(url, user, pass);

            Connection con = (Connection) link;
            con.setAutoCommit(false);
            Statement st = con.createStatement();
            setSt(st);
            setConnection(con);
            mostraractualizar();

        } catch (Exception e) {
            mensaje(e.getMessage());
        }
    }

    public void setSt(Statement st) {
        stm = st;
    }

    public void setConnection(Connection cn) {
        con = cn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablalistado = new javax.swing.JTable();
        btnenviar = new javax.swing.JButton();
        filter = new javax.swing.JLabel();
        txtaplicar = new javax.swing.JTextField();
        txtenviar = new javax.swing.JTextField();
        btnaplicar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablalistado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablalistado.setAlignmentX(1.0F);
        tablalistado.setAlignmentY(1.0F);
        jScrollPane1.setViewportView(tablalistado);

        btnenviar.setText("Enviar");
        btnenviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenviarActionPerformed(evt);
            }
        });

        filter.setText("Filter:");

        txtaplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaplicarActionPerformed(evt);
            }
        });

        txtenviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtenviarActionPerformed(evt);
            }
        });

        btnaplicar.setText("Aplicar");
        btnaplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaplicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtenviar, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnenviar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(btnaplicar))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtenviar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnenviar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnaplicar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(filter)
                        .addComponent(txtaplicar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtenviarActionPerformed
        // TODO add your handling code here:
        txtenviar.transferFocus();
    }//GEN-LAST:event_txtenviarActionPerformed

    private void btnenviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenviarActionPerformed
        // TODO add your handling code here:
        this.consulta();
    }//GEN-LAST:event_btnenviarActionPerformed

    private void txtaplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaplicarActionPerformed
        // TODO add your handling code here:
        txtaplicar.transferFocus();
    }//GEN-LAST:event_txtaplicarActionPerformed

    private void btnaplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaplicarActionPerformed
        // TODO add your handling code here:
        this.filtro();
    }//GEN-LAST:event_btnaplicarActionPerformed

    public void mensaje(String texto) {
        JOptionPane.showMessageDialog(null, texto);
    }

    public void mostrartabla(ResultSet rs) {
        DefaultTableModel modelo;
        String[] titulos = {"AUTHORID", "FIRSTNAME", "LASTNAME"};
        String[] registro = new String[3]; //indices segun la variable "titulos"
        modelo = new DefaultTableModel(null, titulos);
        try {
            while (rs.next()) {
                registro[0] = rs.getString("authorid");
                registro[1] = rs.getString("firstname");
                registro[2] = rs.getString("lastname");
                modelo.addRow(registro);
            }
        } catch (Exception e) {
            mensaje(e.getMessage());
        }
        tablalistado.setModel(modelo);
    }

    public void mostraractualizar() {
        DefaultTableModel modelo;

        String[] titulos = {"AUTHORID", "FIRSTNAME", "LASTNAME"};

        String[] registro = new String[3]; //indices segun la variable "titulos"

        modelo = new DefaultTableModel(null, titulos);

        try {
            rs = stm.executeQuery("select * from author");
            while (rs.next()) {
                registro[0] = rs.getString("authorid");
                registro[1] = rs.getString("firstname");
                registro[2] = rs.getString("lastname");
                modelo.addRow(registro);
            }
        } catch (Exception e) {
            mensaje(e.getMessage());
        }
        tablalistado.setModel(modelo);
    }

    public void consulta() {
        try {
            if (leer(txtenviar) == null) {
                mensaje("NO INGRESO CONSULTA");
            } else {
                switch (clausulaSQL()) {
                    case 1:
                        rs = stm.executeQuery(leer(txtenviar));
                        mostrartabla(rs);
                        break;
                    case 2:
                        stm.executeUpdate(leer(txtenviar));
                        con.commit();
                        mostraractualizar();
                        break;
                    case 3:
                        mensaje("NO HAY CLAUSULA");
                        break;
                    case 0:
                        mensaje("ERROR");
                        break;
                }
            }
        } catch (Exception e) {
            mensaje(e.getMessage());
        }
    }

    public void filtro() {
        try {
            if (leer(txtenviar) == null) {
                mensaje("NO INGRESO CONSULTA");
            } else if (leer(txtaplicar) == null) {
                mensaje("NO INGRESO FILTRO");
            } else if (leer(txtenviar).toUpperCase().contains("WHERE")
                    || leer(txtenviar).toUpperCase().contains("INSERT")
                    || leer(txtaplicar).toUpperCase().contains("SELECT")
                    || leer(txtaplicar).toUpperCase().contains("UPDATE")
                    || leer(txtaplicar).toUpperCase().contains("DELETE")) {
                mensaje("CLAUSULA INCORRECTA");
            } else if (leer(txtaplicar).toUpperCase().contains("WHERE")) {
                switch (clausulaSQL()) {
                    case 1:
                        rs = stm.executeQuery(leer(txtenviar) + " " + leer(txtaplicar));
                        mostrartabla(rs);
                        break;
                    case 2:
                        stm.executeUpdate(leer(txtenviar) + " " + leer(txtaplicar));
                        con.commit();
                        mostraractualizar();
                        break;
                    case 3:
                        mensaje("NO HAY CALUSULA SQL");
                        break;
                    case 0:
                        mensaje("ERROR");
                        break;
                }
            } else {
                mensaje("NO HAY 'WHERE'");
            }
        } catch (Exception e) {
            mensaje(e.getMessage());
        }
    }

    //CORROBORRAR CLAUSULA SQL DEL 1ER JTEXTFIELD 
    public int clausulaSQL() {
        try {
            if (leer(txtenviar).toUpperCase().contains("SELECT")) {
                return 1;
            } else if (leer(txtenviar).toUpperCase().contains("UPDATE")) {
                return 2;
            } else if (leer(txtenviar).toUpperCase().contains("DELETE")) {
                return 2;
            } else if (leer(txtenviar).toUpperCase().contains("INSERT")) {
                return 2;
            } else {
                return 3;
            }
        } catch (Exception e) {
            return 0;
        }
    }

    //METODO LEER TEXTO DE LOS CAMPOS JTEXTFIELD
    public String leer(JTextField txt) {
        try {
            if (txt.getText().isEmpty()) {
                return null;
            } else {
                return txt.getText();
            }

        } catch (Exception e) {
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaplicar;
    private javax.swing.JButton btnenviar;
    private javax.swing.JLabel filter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablalistado;
    private javax.swing.JTextField txtaplicar;
    private javax.swing.JTextField txtenviar;
    // End of variables declaration//GEN-END:variables
}
